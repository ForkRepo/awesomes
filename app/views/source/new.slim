
-content_for :con
  div
    =form_for(@item,url: @suburl,html:{id: 'inform',method: 'post'}) do |item|
      div.form-group
        =item.label :title,"#{t('form.title')}"
        =item.text_field :title,{class: 'form-control'}

      div.form-group
        =item.label :origin,"#{t('form.origin')}"
        p
          | #{t('form.origin_desc')}
          a<[href="https://github.com/jrburke/requirejs/blob/master/require.js#L2019" target="_blank"] https://github.com/jrburke/requirejs/blob/master/require.js#L2019
        =item.text_field :origin,{class: 'form-control'} 

      
  
      div.form-group
        label =t('source.name')
        div[style="height: 700px;"]
          =render "layouts/markdown_editor"

      div.form-group
        =item.label :tag,"#{t('form.tag')}（#{t('form.tag_spilt')}）"
        =item.text_field :tag,{class: 'form-control'}     

      input#tmp-con[type="hidden" value="#{@item.con}"]
      =item.hidden_field :con,{class: 'editor-val'}
      input[type="hidden" name="id" value="#{@item.id}"]
      button.btn.btn-danger[type="submit"] =t('form.sub')

    javascript:
      $('#inform').validate({ 
        rules:{
          'topic[title]':{
            required: true,
          },
          'topic[origin]':{
            required: true,
          },
          
        },
        messages:{
          'topic[title]':'',
          'topic[origin]':''
        }, 
      }); 

      if($("#tmp-con").val() != ''){
        markdown_editor.setValue($("#tmp-con").val());
      }else{
        if(localStorage["markdown_source"]){
          markdown_editor.setValue(localStorage["markdown_source"]); 
        }
      }
  

      
      markdown_editor.on("change",function(){
        localStorage["markdown_source"] = markdown_editor.getValue();
      })

      
